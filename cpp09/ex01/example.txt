#include <iostream>
#include <stack>
#include <string>

using namespace std;

int main(int argc, char* argv[]) {
    // if (argc != 2) {
    //     cerr << "Usage: RPN <inverted-Polish-math-expression>" << endl;
    //     return 1;
    // }

    string expr = "89 * 9 - 9 - 9 - 4 - 1 +";
    stack<int> st;

    for (char c : expr) {
        if (c >= '0' && c <= '9') {
            st.push(c - '0');
        } else if (c == '+') {
            if (st.size() < 2) {
                cerr << "Error: Invalid expression" << endl;
                return 1;
            }
            int op1 = st.top(); st.pop();
            int op2 = st.top(); st.pop();
            st.push(op1 + op2);
        } else if (c == '-') {
            if (st.size() < 2) {
                cerr << "Error: Invalid expression" << endl;
                return 1;
            }
            int op1 = st.top(); st.pop();
            int op2 = st.top(); st.pop();
            st.push(op2 - op1);
        } else if (c == '*') {
            if (st.size() < 2) {
                cerr << "Error: Invalid expression" << endl;
                return 1;
            }
            int op1 = st.top(); st.pop();
            int op2 = st.top(); st.pop();
            st.push(op1 * op2);
        } else if (c == '/') {
            if (st.size() < 2) {
                cerr << "Error: Invalid expression" << endl;
                return 1;
            }
            int op1 = st.top(); st.pop();
            int op2 = st.top(); st.pop();
            if (op1 == 0) {
                cerr << "Error: Division by zero" << endl;
                return 1;
            }
            st.push(op2 / op1);
        }
    }

    if (st.size() != 1) {
        cerr << "Error: Invalid expression" << endl;
        return 1;
    }

    cout << st.top() << endl;
    return 0;
}
